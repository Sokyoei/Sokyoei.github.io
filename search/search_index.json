{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u8607\u5c0f\u6afb Soky\u014dei","text":"<ul> <li>MariaDB/MySQL</li> <li>nginx</li> <li>Redis</li> <li>Git</li> <li>VMware</li> <li>TCP/IP</li> <li>Windows</li> <li>Linux</li> <li>WRF</li> </ul>"},{"location":"Code/","title":"Code","text":"<ul> <li>Python</li> <li>C/C++/CUDA</li> <li>Rust</li> <li>Fortran</li> <li>Java</li> <li>Go</li> <li>C#</li> <li>Web</li> </ul>"},{"location":"Git/","title":"Git","text":""},{"location":"Git/#git_1","title":"git \u521d\u59cb\u5316","text":"<pre><code># \u521d\u59cb\u5316\u4ed3\u5e93\ngit init\n# \u514b\u9686\u9879\u76ee\uff08\u5305\u62ec\u5b50\u9879\u76ee\uff09\ngit clone url [--recursive]\n</code></pre>"},{"location":"Git/#git_2","title":"git \u672c\u5730\u4ed3\u5e93\u63d0\u4ea4","text":"<pre><code>git merge\n\ngit reset\n\ngit rebase\n\n# \u6dfb\u52a0\u6587\u4ef6\u5230\u6682\u5b58\u533a\ngit add\n\n# \u63d0\u4ea4\u5230\u672c\u5730\u4ed3\u5e93\ngit commit\n\ngit checkout\n\ngit cherry-pick\n\n# \u67e5\u770b\u5f53\u524d\u7684\u72b6\u6001\ngit status\n\n# \u67e5\u770b\u63d0\u4ea4\u7684\u65e5\u5fd7\ngit log\n# \u67e5\u770b\u5206\u652f\ngit branch\n</code></pre>"},{"location":"Git/#git_3","title":"git \u8fdc\u7a0b\u4ed3\u5e93","text":"<pre><code># \u4e0e\u8fdc\u7a0b\u4ed3\u5e93\u8fdb\u884c\u540c\u6b65\ngit pull\n# \u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\ngit push\n</code></pre>"},{"location":"Git/#git-submodule","title":"git submodule","text":"<pre><code># \u6dfb\u52a0\u5b50\u6a21\u5757\ngit submodule add url [dst]\n# clone \u4e4b\u540e\u66f4\u65b0\u5b50\u6a21\u5757\ngit submodule update --remote\n# \u66f4\u65b0\u5b50\u6a21\u5757\ngit submodule update --init --remote\n</code></pre> <p>\u5728\u4e3b\u4ed3\u5e93\u4e2d\u66f4\u65b0\u5b50\u4ed3\u5e93\u7684\u5185\u5bb9\u65f6\uff0c\u5148\u4fdd\u969c\u5b50\u4ed3\u5e93\u7684 HEAD \u6307\u9488\u6307\u5411 master \u800c\u4e0d\u662f\u67d0\u4e2a commit, \u5426\u5219\u65e0\u6cd5\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u56e0\u4e3a HEAD \u6b64\u65f6\u662f detached \u7684</p>"},{"location":"Git/#git-log","title":"git \u66f4\u6539 log","text":"<pre><code># \u4fee\u6539\u4e0a\u6b21 log\ngit commit --amend\n</code></pre>"},{"location":"Git/#git-windows","title":"git Windows \u4e0b\u66f4\u6539\u6587\u4ef6\u540d\u5927\u5c0f\u5199","text":"<pre><code>git mv src_path dst_path\n</code></pre>"},{"location":"Git/#github","title":"GitHub","text":""},{"location":"Git/#pull-push","title":"\u79c1\u6709\u4ed3\u5e93 pull push","text":"<ol> <li>token</li> <li>ssh</li> </ol>"},{"location":"Git/#faq","title":"FAQ","text":""},{"location":"Git/#tcp-connection-reset-by-peer","title":"TCP connection reset by peer","text":"<pre><code>fatal: unable to access 'https://github.com/Sokyoei/Ceceilia/': TCP connection reset by peer\n</code></pre>"},{"location":"SUMO/","title":"SUMO","text":"<p>docs</p>"},{"location":"SUMO/#_1","title":"\u5e94\u7528\u7a0b\u5e8f","text":""},{"location":"SUMO/#netgenerate","title":"netgenerate \u751f\u6210\u62bd\u8c61\u8def\u7f51","text":"<p>\u751f\u6210\u7f51\u683c\u8def\u7f51</p> <pre><code>netgenerate --grid --grid.number=10 --grid.length=400 -o grid.net.xml\n</code></pre> <pre><code>netgenerate --grid --grid.number=10 --grid.length=400 -o grid.net.xml\n</code></pre>"},{"location":"SVN/","title":"SVN","text":""},{"location":"TCPIP/","title":"TCP/IP","text":"<p>TCP/IP(Transmission Control Protocol/Internet Protocol) \u4f20\u8f93\u63a7\u5236\u534f\u8bae/\u7f51\u7edc\u534f\u8bae</p> OSI \u6a21\u578b TCP/IP \u6a21\u578b \u529f\u80fd TCP/IP \u534f\u8bae\u7c07 Application Layer(\u5e94\u7528\u5c42) \u5e94\u7528\u5c42 \u6587\u4ef6\u4f20\u8f93\uff0c\u7535\u5b50\u90ae\u4ef6\uff0c\u6587\u4ef6\u670d\u52a1\uff0c\u865a\u62df\u7ec8\u7aef FTP, HTTP, TELNET, SMTP, DNS, SSH... Presentation Layer(\u8868\u793a\u5c42) \u6570\u636e\u683c\u5f0f\u5316\uff0c\u4ee3\u7801\u8f6c\u6362\uff0c\u6570\u636e\u52a0\u5bc6 XDR Session Layer(\u4f1a\u8bdd\u5c42) \u89e3\u9664\u6216\u5efa\u7acb\u4e0e\u522b\u7684\u63a5\u70b9\u7684\u8054\u7cfb WinSocket, ASP, SSL, TLS... Transport Layer(\u4f20\u8f93\u5c42) \u4f20\u8f93\u5c42 \u63d0\u4f9b\u7aef\u5bf9\u7aef\u7684\u63a5\u53e3 TCP, UDP Nerwork Layer(\u7f51\u7edc\u5c42) \u7f51\u7edc\u5c42 \u4e3a\u6570\u636e\u6253\u5305\u9009\u62e9\u8def\u7531 IP, ICMP, ARP, PARP, BOOTP Data Link Layer(\u6570\u636e\u94fe\u8def\u5c42) \u94fe\u8def\u5c42 \u4f20\u8f93\u6709\u5730\u5740\u7684\u5e27\u4ee5\u53ca\u9519\u8bef\u68c0\u6d4b\u529f\u80fd \u4ee5\u592a\u7f51\u3001IEEE 802.11 Phsical Layer(\u7269\u7406\u5c42) \u4ee5\u4e8c\u8fdb\u5236\u6570\u636e\u5f62\u5f0f\u5728\u7269\u7406\u5a92\u4f53\u4e0a\u4f20\u8f93\u6570\u636e \u7f51\u7ebf\u3001\u5149\u7f06\u3001ISO2110, IEEE802, IEEE802.2"},{"location":"TCPIP/#_1","title":"\u5e94\u7528\u5c42","text":""},{"location":"TCPIP/#http","title":"HTTP","text":""},{"location":"TCPIP/#ftp","title":"FTP","text":""},{"location":"TCPIP/#dns","title":"DNS","text":""},{"location":"TCPIP/#_2","title":"\u8868\u793a\u5c42","text":""},{"location":"TCPIP/#_3","title":"\u4f1a\u8bdd\u5c42","text":""},{"location":"TCPIP/#_4","title":"\u4f20\u8f93\u5c42","text":"UDP TCP \u662f\u5426\u8fde\u63a5 \u65e0\u8fde\u63a5 \u9762\u5411\u8fde\u63a5 \u662f\u5426\u53ef\u9760 \u4e0d\u53ef\u9760\u4f20\u8f93\uff0c\u4e0d\u4f7f\u7528\u6d41\u91cf\u63a7\u5236\u548c\u62e5\u585e\u63a7\u5236 \u53ef\u9760\u4f20\u8f93\uff0c\u4f7f\u7528\u6d41\u91cf\u63a7\u5236\u548c\u62e5\u585e\u63a7\u5236 \u8fde\u63a5\u5bf9\u8c61\u4e2a\u6570 \u652f\u6301\u4e00\u5bf9\u4e00\uff0c\u4e00\u5bf9\u591a\uff0c\u591a\u5bf9\u4e00\u548c\u591a\u5bf9\u591a\u4ea4\u4e92\u901a\u4fe1 \u53ea\u80fd\u662f\u4e00\u5bf9\u4e00\u901a\u4fe1 \u4f20\u8f93\u65b9\u5f0f \u9762\u5411\u62a5\u6587 \u9762\u5411\u5b57\u8282\u6d41 \u9996\u90e8\u5f00\u9500 \u9996\u90e8\u5f00\u9500\u5c0f\uff0c\u4ec58\u5b57\u8282 \u9996\u90e8\u6700\u5c0f20\u5b57\u8282\uff0c\u6700\u592760\u5b57\u8282 \u9002\u7528\u573a\u666f \u9002\u7528\u4e8e\u5b9e\u65f6\u5e94\u7528\uff08IP\u7535\u8bdd\u3001\u89c6\u9891\u4f1a\u8bae\u3001\u76f4\u64ad\u7b49\uff09 \u9002\u7528\u4e8e\u8981\u6c42\u53ef\u9760\u4f20\u8f93\u7684\u5e94\u7528\uff0c\u4f8b\u5982\u6587\u4ef6\u4f20\u8f93"},{"location":"TCPIP/#tcp","title":"TCP","text":""},{"location":"TCPIP/#udp","title":"UDP","text":""},{"location":"TCPIP/#_5","title":"\u7f51\u7edc\u5c42","text":""},{"location":"TCPIP/#_6","title":"\u6570\u636e\u94fe\u8def\u5c42","text":""},{"location":"TCPIP/#_7","title":"\u7269\u7406\u5c42","text":""},{"location":"VMware/","title":"VMware","text":""},{"location":"VMware/#vmware_1","title":"VMware \u6302\u8f7d\u6587\u4ef6\u5939","text":"<pre><code>vmhgfs-fuse .host:/Asuka /mnt\n</code></pre>"},{"location":"VMware/#faq","title":"FAQ","text":""},{"location":"VMware/#1-vmware-centos-root","title":"1. VMware CentOS root \u80cc\u666f\u9ed1\u8272\uff0c\u4e0d\u663e\u793a\u4e0a\u4e0b\u7684\u4efb\u52a1\u680f","text":"<pre><code># \u5220\u9664 gnome \u7f13\u5b58\nrm -rf /root/.cache/thumbnails/fail/gnome-thumbnail-factory\nrm -rf /root/.cache/gnome-shell\nrm -rf /root/.cache/gnome-software\nrm -rf /root/.cache/gnome-control-center\nrm -rf /root/.config/gnome-initial-setup-done\nrm -rf /root/.config/gnome-session\nrm -rf /root/.local/share/gnome-shell\nrm -rf /root/.local/share/gnome-settings-daemon\n# \u91cd\u542f\nreboot\n</code></pre>"},{"location":"Vim/","title":"Vim","text":"i \u8fdb\u5165\u7f16\u8f91\u6a21\u5f0f ddp \u5f53\u524d\u884c\u4e0e\u4e0b\u4e00\u884c\u4ea4\u6362"},{"location":"Web/","title":"Web","text":""},{"location":"Web/#http","title":"HTTP","text":""},{"location":"Web/#http_1","title":"HTTP \u534f\u8bae\u683c\u5f0f","text":""},{"location":"Web/#client","title":"client","text":"<pre><code>```text\nGET / HTTP/1.0\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5)\nAccept: */*\n```\n</code></pre>"},{"location":"Web/#server","title":"server","text":"<p>\u5934\u4fe1\u606f + \u7a7a\u884c(\\r\\n) + \u6570\u636e</p> <pre><code>```text\nHTTP/1.0 200 OK\nContent-Type: text/plain\nContent-Length: 137582\nExpires: Thu, 05 Dec 1997 16:00:00 GMT\nLast-Modified: Wed, 5 August 1996 15:55:28 GMT\nServer: Apache 0.84\n\n&lt;html&gt;\n&lt;body&gt;Hello World&lt;/body&gt;\n&lt;/html&gt;\n```\n</code></pre>"},{"location":"Web/#_1","title":"\u8bf7\u6c42\u65b9\u5f0f","text":"\u65b9\u5f0f \u63cf\u8ff0 GET \u8bf7\u6c42\u6570\u636e POST \u53d1\u9001\u6570\u636e\u7ed9\u670d\u52a1\u5668 HEAD \u8bf7\u6c42\u6807\u5934\u4fe1\u606f DELETE \u5220\u9664\u6307\u5b9a\u7684\u8d44\u6e90 PUT \u521b\u5efa\u6216\u4fee\u6539\u6570\u636e PATCH \u5bf9\u8d44\u6e90\u8fdb\u884c\u90e8\u5206\u4fee\u6539 OPTIONS \u8bf7\u6c42\u5141\u8bb8\u901a\u4fe1\u9009\u9879 CONNECT \u4e0e\u670d\u52a1\u5668\u521b\u5efa\u53cc\u5411\u6c9f\u901a\u7684\u901a\u9053 TRACE \u56de\u73af\u6d4b\u8bd5"},{"location":"Web/#cookie","title":"Cookie","text":""},{"location":"Web/#wsgi","title":"WSGI","text":"<p>WSGI(Web Server Gateway Interface)</p>"},{"location":"Docker/","title":"Docker","text":"<pre><code>docker run -p\n</code></pre>"},{"location":"Kafka/","title":"Kafka","text":""},{"location":"Linux/","title":"Linux","text":"<p>Ubuntu CentOS</p>"},{"location":"Linux/#linux_1","title":"Linux \u6587\u4ef6\u6743\u9650","text":"<p>drwxrwxrwx</p> d \u6587\u4ef6\u5939 - \u666e\u901a\u6587\u4ef6 l \u94fe\u63a5\u6587\u4ef6 b \u5757\u8bbe\u5907\u6587\u4ef6 p \u7ba1\u9053\u6587\u4ef6 c \u5b57\u7b26\u8bbe\u5907\u6587\u4ef6 s \u5957\u63a5\u5b57\u6587\u4ef6"},{"location":"Linux/#linux_2","title":"Linux \u6807\u51c6\u8f93\u5165\u3001\u6807\u51c6\u8f93\u51fa\u548c\u6807\u51c6\u9519\u8bef\u8f93\u51fa","text":"0 \u6807\u51c6\u8f93\u5165\uff08\u952e\u76d8\uff09 1 \u6807\u51c6\u8f93\u51fa\uff08\u5c4f\u5e55\uff09 2 \u6807\u51c6\u9519\u8bef\u8f93\u51fa\uff08\u5c4f\u5e55\uff09"},{"location":"Linux/#linux_3","title":"Linux '&gt;', '&lt;', '&amp;', '|'","text":"&gt; \u8f93\u51fa\u91cd\u5b9a\u5411\uff08\u8986\u76d6\uff09 &gt;&gt; \u8f93\u51fa\u91cd\u5b9a\u5411\uff08\u8ffd\u52a0\uff09 &amp; \u4efb\u52a1\u5728\u540e\u53f0\u6267\u884c &amp;&amp; \u8868\u793a\u524d\u4e00\u6761\u547d\u4ee4\u6267\u884c\u6210\u529f\uff0c\u624d\u6267\u884c\u4e0b\u4e00\u6761\u547d\u4ee4 | \u7ba1\u9053\u8fd0\u7b97\u7b26\uff0c\u4e0a\u4e00\u6761\u547d\u4ee4\u7684\u8f93\u51fa\uff0c\u4f5c\u4e3a\u4e0b\u4e00\u6761\u547d\u4ee4\u7684\u8f93\u5165\uff08\u53c2\u6570\uff09 || \u8868\u793a\u524d\u4e00\u6761\u547d\u4ee4\u6267\u884c\u5931\u8d25\uff0c\u624d\u6267\u884c\u4e0b\u4e00\u6761\u547d\u4ee4 &amp;&gt; \u5c06\u9519\u8bef\u4fe1\u606f\u548c\u666e\u901a\u4fe1\u606f\u90fd\u91cd\u5b9a\u5411\u8f93\u51fa <p>\u5c06 shell \u91cc\u7684\u6587\u672c\u5199\u5165\u6587\u4ef6</p> <pre><code>cat &gt; helloworld.txt &lt;&lt; EOF\n\"hello world\"\nother strings...\nEOF\n</code></pre>"},{"location":"Linux/#linux_4","title":"Linux \u547d\u4ee4","text":"<ol> <li> <p>\u7cfb\u7edf\u4fe1\u606f</p> <ul> <li>uname</li> <li>hostname</li> <li>uptime</li> <li>lscpu</li> </ul> </li> <li> <p>\u6587\u4ef6\u76ee\u5f55</p> <ul> <li>ls \u5217\u51fa\u6587\u4ef6</li> <li>mv \u79fb\u52a8/\u91cd\u547d\u540d\u6587\u4ef6</li> <li>rm \u5220\u9664\u6587\u4ef6/\u6587\u4ef6\u5939</li> <li>cp \u590d\u5236\u6587\u4ef6/\u6587\u4ef6\u5939</li> <li>ln \u521b\u5efa\u94fe\u63a5</li> <li>pwd \u6253\u5370\u5f53\u524d\u76ee\u5f55</li> <li>mkdir \u521b\u5efa\u6587\u4ef6\u5939</li> <li>touch \u521b\u5efa\u6587\u4ef6</li> <li>cat/more/less \u67e5\u770b\u6587\u4ef6</li> <li>head/tail \u67e5\u770b\u6587\u4ef6\u5f00\u5934/\u7ed3\u5c3e</li> </ul> </li> <li> <p>\u6587\u4ef6\u641c\u7d22</p> <ul> <li>find</li> <li>which</li> <li>whereis</li> </ul> </li> <li> <p>\u6587\u672c\u5904\u7406</p> <ul> <li>sed</li> <li>awk</li> <li>grep</li> <li>sort</li> <li>diff</li> <li>wc</li> </ul> </li> <li>\u6587\u4ef6\u538b\u7f29<ul> <li>tar \u5c06\u4e00\u7cfb\u5217\u6587\u4ef6\u6216\u6587\u4ef6\u5939\u6253\u5305\u5f52\u6863</li> <li>zip/unzip \u538b\u7f29\u6216\u89e3\u538b\u6587\u4ef6 zip</li> <li>gzip/gunzip \u538b\u7f29\u6216\u89e3\u538b\u6587\u4ef6 gz</li> </ul> </li> <li>\u6743\u9650\u7ba1\u7406<ul> <li>chmod \u4fee\u6539\u6587\u4ef6\u6216\u6587\u4ef6\u5939\u7684\u6743\u9650</li> <li>chown</li> <li>umask</li> </ul> </li> <li>\u8fdb\u7a0b\u7ba1\u7406<ul> <li>ps</li> <li>top \u663e\u793a linux \u8fdb\u7a0b</li> <li>htop</li> <li>kill \u6740\u6b7b\u8fdb\u7a0b</li> <li>killall</li> <li>nohup \u5c06\u547d\u4ee4\u5728\u540e\u53f0\u8fd0\u884c</li> </ul> </li> <li>\u78c1\u76d8<ul> <li>du</li> <li>df</li> <li>mount/unmount \u6302\u8f7d/\u5378\u8f7d\u78c1\u76d8</li> </ul> </li> <li> <p>\u5b89\u5168</p> <ul> <li>scp</li> </ul> </li> <li> <p>\u4e0b\u8f7d\u6587\u4ef6</p> <ul> <li>wget</li> <li>curl</li> </ul> </li> <li> <p>\u7f51\u7edc\u914d\u7f6e</p> <ul> <li>ifconfig</li> <li>ip</li> <li>netstat</li> <li>ping</li> </ul> </li> <li> <p>\uff1f\uff1f</p> <ul> <li>ldd \u6253\u5370\u52a8\u6001\u5e93\u4f9d\u8d56</li> </ul> </li> </ol>"},{"location":"Linux/#ls","title":"ls","text":"<p>ls(list directory contents) \u5217\u51fa\u6587\u4ef6\u4fe1\u606f</p> <pre><code># \u67e5\u770b\u5305\u542b\u9690\u85cf\u6587\u4ef6\nls -a\n# \u67e5\u770b\u6587\u4ef6\u8be6\u7ec6\u4fe1\u606f\nls -l\n# \u67e5\u770b\u6587\u4ef6\u8be6\u7ec6\u4fe1\u606f\uff08\u6587\u4ef6\u5927\u5c0f\u7f8e\u5316\u663e\u793a\uff09\nls -lh\n</code></pre>"},{"location":"Linux/#mv","title":"mv","text":"<p>mv(move) \u79fb\u52a8\u6216\u91cd\u547d\u540d\u6587\u4ef6\u6216\u6587\u4ef6\u5939</p> <pre><code># \u79fb\u52a8\uff08\u4e0d\u663e\u793a\u786e\u8ba4\u4e0e\u5426\uff09\nmv -f src dst\n</code></pre>"},{"location":"Linux/#pwd","title":"pwd","text":"<p>pwd(print the name of the current working directory) \u6253\u5370\u5f53\u524d\u5de5\u4f5c\u8def\u5f84</p> <pre><code>pwd\n</code></pre>"},{"location":"Linux/#cp","title":"cp","text":"<p>cp(copy)</p> <pre><code>cp src dst\n</code></pre>"},{"location":"Linux/#rm","title":"rm","text":"<p>rm(remove)</p> <pre><code># \u5220\u9664\u6587\u4ef6\nrm file\n# \u5220\u9664\u6587\u4ef6\u5939\nrm -rf dir\n</code></pre>"},{"location":"Linux/#ln","title":"ln","text":"<p>ln(link)</p>"},{"location":"Linux/#mkdir","title":"mkdir","text":"<p>mkdir(make directory)</p>"},{"location":"Linux/#chmod","title":"chmod","text":"<p>chmod(change mode)</p> <pre><code>chmod 777 file\n</code></pre>"},{"location":"Linux/#touch","title":"touch","text":""},{"location":"Linux/#vi","title":"vi","text":""},{"location":"Linux/#vim","title":"vim","text":""},{"location":"Linux/#less","title":"less","text":""},{"location":"Linux/#tail","title":"tail","text":"<pre><code># \u4e00\u76f4\u6eda\u52a8\u8f93\u51fa\ntail -f txt_file\n</code></pre>"},{"location":"Linux/#cat","title":"cat","text":"<p>\u663e\u793a\u6587\u672c\u6587\u4ef6\u7684\u5185\u5bb9</p> <pre><code>cat txt_file\n</code></pre>"},{"location":"Linux/#awk","title":"awk","text":"<p>\u5904\u7406\u6587\u672c\u7684\u5e94\u7528\u7a0b\u5e8f</p>"},{"location":"Linux/#sed","title":"sed","text":"<p>\u5bf9\u6587\u672c\u8fdb\u884c\u8fc7\u6ee4\u548c\u53d8\u5f62\u5904\u7406</p>"},{"location":"Linux/#file","title":"file","text":"<p>\u67e5\u770b\u6587\u4ef6\u7c7b\u578b</p>"},{"location":"Linux/#gzip","title":"gzip","text":""},{"location":"Linux/#nohup","title":"nohup","text":""},{"location":"Linux/#kill","title":"kill","text":"<p>\u7ec8\u6b62\u8fdb\u7a0b</p>"},{"location":"Linux/#killall","title":"killall","text":"<p>\u7ec8\u6b62\u4e00\u7cfb\u5217\u8fdb\u7a0b</p>"},{"location":"Linux/#uname","title":"uname","text":"<p>\u663e\u793a\u5185\u6838\u4fe1\u606f</p>"},{"location":"Linux/#free","title":"free","text":"<p>\u67e5\u770b\u5185\u5b58\u4f7f\u7528\u60c5\u51b5</p>"},{"location":"Linux/#reboot","title":"reboot","text":"<p>\u91cd\u542f</p>"},{"location":"Linux/#shutdown","title":"shutdown","text":"<p>\u5173\u673a</p>"},{"location":"Linux/#find","title":"find","text":"<p>\u67e5\u627e\u6587\u4ef6\u7684\u4f4d\u7f6e</p>"},{"location":"Linux/#grep","title":"grep","text":"<p>\u5bf9\u6587\u4ef6\u5185\u5bb9\u641c\u7d22\uff0c\u8fd4\u56de\u6240\u6709\u5339\u914d\u7684\u884c</p>"},{"location":"Linux/#which","title":"which","text":"<p>\u8f93\u51fa\u547d\u4ee4\u7684\u5168\u8def\u5f84</p> <pre><code>which exe_file\n</code></pre>"},{"location":"Linux/#whereis","title":"whereis","text":"<p>\u663e\u793a\u67d0\u4e2a\u547d\u4ee4\u7684\u4f4d\u7f6e</p>"},{"location":"Linux/#dd","title":"dd","text":"<p>\u590d\u5236\u78c1\u76d8\u6216\u6587\u4ef6\u7cfb\u7edf</p>"},{"location":"Linux/#clear","title":"clear","text":"<p>\u6e05\u7a7a\u5c4f\u5e55</p>"},{"location":"Linux/#du","title":"du","text":"<p>du(disk usage) \u67e5\u770b\u78c1\u76d8\u4f7f\u7528\u7387</p> <pre><code>du -sh\n</code></pre>"},{"location":"Linux/#df","title":"df","text":"<p>df(disk free)</p> <pre><code>df -h\n</code></pre>"},{"location":"Linux/#systemctl","title":"systemctl","text":"<pre><code># \u67e5\u770b\u5f00\u673a\u542f\u52a8\u9879\nsystemctl list-unit-files --type=service\n</code></pre>"},{"location":"Linux/#ldd","title":"ldd","text":"<pre><code># \u67e5\u770b\u53ef\u6267\u884c\u6587\u4ef6\u7684\u4f9d\u8d56\u5e93\nldd exe_file\n</code></pre>"},{"location":"Linux/#top","title":"top","text":"<p>top \u6027\u80fd\u5206\u6790\u5de5\u5177\uff08\u7c7b\u4f3c Windows \u4efb\u52a1\u7ba1\u7406\u5668\uff09</p> <pre><code>top\n# \u4f7f\u7528\u540e\u8fdb\u5165\u4ea4\u4e92\u6a21\u5f0f\n</code></pre> q \u9000\u51fa h \u5e2e\u52a9\u754c\u9762"},{"location":"Linux/#ps","title":"ps","text":"<p>ps \u67e5\u770b\u8fdb\u7a0b\u3001\u5e94\u7528\u8fd0\u884c\u72b6\u6001</p> <pre><code># \u67e5\u770b\u5e94\u7528\u7684\u8fdb\u7a0b\nps -ef | grep exe\n</code></pre>"},{"location":"Linux/#mount","title":"mount","text":"<p>mount</p>"},{"location":"Linux/#ulimit","title":"ulimit","text":"<pre><code>ulimit -s unlimited\n</code></pre>"},{"location":"Linux/#_1","title":"\u5173\u952e\u6587\u4ef6","text":"<ol> <li>/etc/rc.d/rc.local \u5f00\u673a\u81ea\u542f\u52a8\u4e00\u4e9b\u6307\u4ee4</li> <li>~/.bash_profile \u8bbe\u7f6e\u4e2a\u4eba\u7528\u6237\u7684\u73af\u5883\u53d8\u91cf\u3001\u4e2a\u4eba\u8bbe\u7f6e\u7b49</li> <li>/etc/profile \u8bbe\u7f6e\u7cfb\u7edf\u7ea7\u7684\u73af\u5883\u53d8\u91cf\u3001\u542f\u52a8\u7a0b\u5e8f\u7b49\uff0c\u5bf9\u6240\u6709\u7528\u6237\u751f\u6548</li> <li>~/.bashrc \u7528\u6765\u914d\u7f6e shell</li> </ol>"},{"location":"Linux/CentOS/","title":"CentOS","text":""},{"location":"Linux/CentOS/#chrome","title":"\u5b89\u88c5 Chrome","text":"<pre><code>wget https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm\nyum install -y google-chrome-stable_current_x86_64.rpm\n</code></pre> <p>\u5c06\u56fe\u6807\u62d6\u5230\u684c\u9762\u4e0a\u53f3\u51fb Properties, \u5728 Command \u547d\u4ee4\u884c\u589e\u52a0 -no-sandbox</p> <pre><code>/usr/bin/google-chrome-stable %U --no-sandbox\n</code></pre>"},{"location":"Linux/Ubuntu/","title":"Ubuntu","text":""},{"location":"MariaDB/","title":"MariaDB/MySQL","text":""},{"location":"MariaDB/#_1","title":"\u5b89\u88c5","text":"Windowslinux <p>\u4e0b\u8f7d zip \u6587\u4ef6</p> <pre><code># \u7ba1\u7406\u5458\u6743\u9650\nmysql_install_db.exe --service=MariaDB --password=password\n</code></pre> <p>\u5f00\u542f MariaDB \u670d\u52a1</p> <pre><code>sc start MariaDB\n</code></pre> <p>\u5220\u9664 MariaDB \u670d\u52a1</p> <pre><code>sc stop MariaDB\nsc delete MariaDB\nrmdir /s /q /mariadb-version-winx64/data\n</code></pre> CentOS <pre><code>yum install -y mariadb\n</code></pre>"},{"location":"MariaDB/#innodb","title":"InnoDB \u5b58\u50a8\u5f15\u64ce","text":"<p>.frm \u8868\u7ed3\u6784\u6587\u4ef6</p> <p>.idb \u8868\u6570\u636e\u548c\u7d22\u5f15\u6587\u4ef6</p>"},{"location":"Redis/","title":"redis","text":"<p>github</p> <p>Windows</p> <pre><code># \u7b80\u5355\u542f\u52a8\nredis-server.exe redis.windows.conf\n</code></pre>"},{"location":"WRF/","title":"WRF","text":"<ul> <li>ARW OnLine Tutorial</li> <li>Welcome to WRF User\u2019s Guide!</li> <li>WRFv4 User Guide</li> </ul> <p>WRF \u5404\u6587\u4ef6\u5939\u7ed3\u6784</p> <pre><code>/home/ahri/WRFV4\n            \u2502\n            \u251c\u2500\u2500 WRF     -&gt; WRF \u9884\u6d4b\n            \u251c\u2500\u2500 WPS     -&gt; WRF \u9884\u5904\u7406\n            \u251c\u2500\u2500 WRFDA   -&gt; wrfda \u540c\u5316\n            \u251c\u2500\u2500 GSI     -&gt; gsi.x \u540c\u5316\n            \u251c\u2500\u2500 run     -&gt; \u5927\u591a\u6570\u53ef\u6267\u884c\u6587\u4ef6\u7684\u8fd0\u884c\u6587\u4ef6\u5939\n            \u2514\u2500\u2500 test_*  -&gt; \u7528\u6765\u6267\u884c\u5b98\u65b9\u6848\u4f8b\n</code></pre> <ul> <li>\u7f16\u8bd1\u5b89\u88c5</li> <li>\u8fd0\u884c\u6d41\u7a0b</li> <li>\u6570\u636e\u4e0b\u8f7d</li> <li>\u5e38\u89c1\u9519\u8bef</li> </ul> <p>\u5927\u6c14\u6570\u503c\u6a21\u5f0f\u672c\u8d28\u662f\u5e94\u7528\u5404\u79cd\u6570\u503c\u7b97\u6cd5\uff0c\u6c42\u89e3\u4e00\u7ec4\u504f\u5fae\u5206\u65b9\u7a0b\u7ec4\u7684\u6570\u503c\u89e3</p>"},{"location":"WRF/#_1","title":"\u5168\u7403\u6a21\u5f0f\u548c\u533a\u57df\u6a21\u5f0f","text":"<ul> <li>\u5168\u7403\u6a21\u5f0f\u53ea\u9700\u8981\u521d\u59cb\u6761\u4ef6\uff0c\u65e0\u9700\u8fb9\u754c\u6761\u4ef6</li> <li>\u533a\u57df\u6a21\u5f0f\u9700\u8981\u521d\u59cb\u6761\u4ef6\u548c\u4fa7\u8fb9\u754c\u6761\u4ef6\uff08\u56db\u6761\u8fb9\u4e0a\u7684\u503c\uff09</li> </ul>"},{"location":"WRF/#_2","title":"\u8d44\u6599\u540c\u5316","text":"<ul> <li>WRFDA</li> <li>GSI</li> </ul> <p>\u8d44\u6599\u540c\u5316\u65b9\u6cd5</p> <ul> <li>\u591a\u9879\u5f0f\u63d2\u503c</li> <li>\u9010\u6b65\u8ba2\u6b63\u6cd5</li> <li>\u6700\u6709\u63d2\u503c</li> <li>\u53d8\u5206\u540c\u5316\uff08\u5e38\u7528\uff09</li> <li>\u96c6\u5408\u5361\u5c14\u66fc\u6ee4\u6ce2\uff08\u6b27\u6d32\u3001\u6d77\u6d0b\u4f7f\u7528\uff09</li> </ul> <p>\u89c2\u6d4b\u8d44\u6599\u79cd\u7c7b</p> <ul> <li>\u5730\u9762\u8d44\u6599</li> <li>\u63a2\u7a7a\u6c14\u7403\u8d44\u6599</li> <li>\u98ce\u5ed3\u7ebf\u8d44\u6599</li> <li>\u98de\u673a\u62a5\u8d44\u6599</li> <li>\u6d6e\u6807\u8d44\u6599</li> <li>\u96f7\u8fbe\u8d44\u6599</li> <li>\u536b\u661f\u8d44\u6599</li> </ul>"},{"location":"WRF/#_3","title":"\u6570\u636e","text":"<p>\u5e38\u89c1\u518d\u5206\u6790\u8d44\u6599</p> <ul> <li>ERA5(\u6b27\u6d32)</li> <li>FNL(\u7f8e\u56fd)</li> <li>JRA(\u65e5\u672c)</li> <li>CRA(\u4e2d\u56fd)</li> </ul>"},{"location":"WRF/#wrf_1","title":"WRF \u540e\u5904\u7406","text":"<p>wrfout \u6587\u4ef6\u91c7\u7528 Arakawa C-grid(\u8352\u5ddd C \u7f51\u683c) \uff0cUV \u5206\u522b\u5728\u7ecf\u7eac\u7ef4\u5ea6\u4e0a\u6bd4\u6b63\u5e38\u591a\u4e00\u7ef4\u3002see also</p> <p>\u80cc\u666f\u573a\uff1abackground\uff0c\u662f\u5229\u7528\u7269\u7406\u516c\u5f0f\u8ba1\u7b97\u540e\u7684\u4e00\u4e2a\u5927\u6c14\u72b6\u6001\u7ed3\u679c \u89c2\u6d4b\u573a\uff1aobservation\uff0c\u662f\u5229\u7528\u63a2\u6d4b\u5668\u548c\u89c2\u6d4b\u7ad9\u6d4b\u5f97\u7684\u5927\u6c14\u72b6\u6001\u7ed3\u679c \u5206\u6790\u573a\uff1aanalysis\uff0c\u662f\u7efc\u5408\u8003\u8651\u4e86\u7269\u7406\u516c\u5f0f\u548c\u89c2\u6d4b\u7ed3\u679c\u540e\u5f97\u51fa\u7684\u6700\u63a5\u8fd1\u771f\u5b9e\u5927\u6c14\u7684\u72b6\u6001\u7ed3\u679c</p> <p>\u9884\u62a5\u573a\uff1a \u521d\u59cb\u573a\uff1a\u6a21\u5f0f\u521d\u59cb\u65f6\u523b\u7684\u72b6\u6001</p> <p>fnl file: \u518d\u5206\u6790\u6570\u636e\uff0c\u662f\u5206\u6790\u573a\uff0c\u9a71\u52a8 WRF \u662f\u6a21\u62df gfs file: \u9884\u62a5\u573a\uff0c\u9a71\u52a8 WRF \u662f\u9884\u62a5 gdas file: bufr file: \u89c2\u6d4b\u573a</p>"},{"location":"WRF/#prepbufr","title":"prepbufr","text":"<ul> <li>obs \u89c2\u6d4b\u503c</li> <li>qcf \u8d28\u63a7\u7801</li> </ul> POB PRESSURE OBSERVATION \u538b\u5f3a\u89c2\u6d4b\u503c"},{"location":"WRF/#wrf_2","title":"WRF \u53d8\u91cf","text":""},{"location":"WRF/#gsi","title":"GSI \u53d8\u91cf","text":"short name long name \u540d\u79f0 ps surface pressure \u8868\u9762\u538b\u529b t temperature \u6e29\u5ea6 q moisture \u6e7f\u5ea6 pw total column water \u603b\u964d\u6c34 u zonal wind \u7eac\u5411\u98ce v meridional wind \u7ecf\u5411\u98ce spd wind speed \u98ce\u901f dw doppler lidar winds \u591a\u666e\u52d2\u6fc0\u5149\u96f7\u8fbe\u98ce sst sea-surface temperature \u6d77\u6d0b\u8868\u9762\u6e29\u5ea6"},{"location":"WRF/build/","title":"WRF \u7f16\u8bd1\u5b89\u88c5","text":"<p>Compiling WRF</p> <p>\u5bf9\u4e8e intel \u7f16\u8bd1\u5668(icc icpc ifort)\uff0c\u9700\u8981\u5bf9 configure.wrf/configure.wps \u8fdb\u884c\u4fee\u6539</p> <pre><code>- DM_FC           =       mpif90\n- DM_CC           =       mpicc -cc=$(SCC)\n+ DM_FC           =       mpiifort\n+ DM_CC           =       mpiicc\n</code></pre>"},{"location":"WRF/build/#centos-gcc-update","title":"CentOS GCC update","text":"<pre><code>yum install centos-release-scl\nyum install devtoolset-8\n# shell \u5207\u6362 GCC 8\nsource /opt/rh/devtoolset-8/enable\n# or\n#scl enable devtoolset-8 bash\n</code></pre>"},{"location":"WRF/build/#config","title":"config","text":"<pre><code># WARNING: CentOS7 \u4e0d\u8981\u7528\u81ea\u5e26\u7684 GCC 4.8.5 \u7f16\u8bd1\uff0c\u8981\u7528\u4e2a\u66f4\u9ad8\u7684\u7248\u672c\n\n# intel WRF \u4f9d\u8d56\u5e93\u8def\u5f84\nexport WRF_LIBRARY=/home/ahri/apps\n\nexport CC=gcc\nexport CXX=g++\nexport FC=gfortran\nexport FCFLAGS=-m64\nexport F77=gfortran\nexport FFLAGS=-m64\n\nexport LD_LIBRARY_PATH=$WRF_LIBRARY/lib\nexport LIBRARY_PATH=$WRF_LIBRARY/lib\nexport PATH=$PATH:$WRF_LIBRARY/bin\nexport NETCDF=$WRF_LIBRARY\nexport JASPERLIB=$WRF_LIBRARY/lib\nexport JASPERINC=$WRF_LIBRARY/include\n</code></pre>"},{"location":"WRF/build/#wrf-deps","title":"WRF deps","text":""},{"location":"WRF/build/#1-zlib","title":"1. zlib","text":"<pre><code>wget https://github.com/madler/zlib/releases/download/v1.2.13/zlib-1.2.13.tar.gz\n./configure --prefix=$WRF_LIBRARY\nmake\nmake install\n</code></pre>"},{"location":"WRF/build/#2-szip","title":"2. szip","text":"<pre><code>wget https://support.hdfgroup.org/ftp/lib-external/szip/2.1.1/src/szip-2.1.1.tar.gz\n./configure --enable-shared --prefix=$WRF_LIBRARY\nmake\nmake install\n</code></pre>"},{"location":"WRF/build/#3-hdf5-zlib-szip","title":"3. hdf5(\u4f9d\u8d56 zlib szip)","text":"<pre><code>wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.12/hdf5-1.12.0/src/hdf5-1.12.0.tar.gz\n./configure --enable-shared --enable-fortran --with-zlib=$WRF_LIBRARY --with-szlib=$WRF_LIBRARY --prefix=$WRF_LIBRARY\nmake\nmake install\n</code></pre>"},{"location":"WRF/build/#4-udunits","title":"4. udunits","text":"<pre><code>wget https://downloads.unidata.ucar.edu/udunits/2.2.28/udunits-2.2.28.tar.gz\n# CentOS\nyum install expat*\n# Ubuntu\nsudo apt-get install libexpat1-dev\n./configure --enable-shared --prefix=$WRF_LIBRARY\nmake\nmake install\n</code></pre>"},{"location":"WRF/build/#5-netcdf-ccfortran-hdf5-udunits","title":"5. netcdf C/C++/Fortran(\u4f9d\u8d56 hdf5 udunits)","text":"<pre><code># CentOS\nyum install libxml2-devel m4 curl-devel\n\nwget https://downloads.unidata.ucar.edu/netcdf-c/4.8.1/netcdf-c-4.8.1.tar.gz\n./configure --enable-shared --enable-netcdf4 CPPFLAGS=-I$WRF_LIBRARY/include LDFLAGS=-L$WRF_LIBRARY/lib --prefix=$WRF_LIBRARY\nmake\nmake install\n\nwget https://downloads.unidata.ucar.edu/netcdf-fortran/4.5.3/netcdf-fortran-4.5.3.tar.gz\n./configure --enable-shared --enable-netcdf4 CPPFLAGS=-I$WRF_LIBRARY/include LDFLAGS=-L$WRF_LIBRARY/lib --prefix=$WRF_LIBRARY\nmake\nmake install\n\nwget https://downloads.unidata.ucar.edu/netcdf-cxx/4.3.1/netcdf-cxx4-4.3.1.tar.gz\n./configure --enable-shared CPPFLAGS=-I$WRF_LIBRARY/include LDFLAGS=-L$WRF_LIBRARY/lib --prefix=$WRF_LIBRARY\nmake\nmake install\n\n# Ubuntu\nsudo apt install libnetcdf*-dev\n</code></pre>"},{"location":"WRF/build/#6-libpng","title":"6. libpng","text":"<pre><code>wget https://download.sourceforge.net/libpng/libpng-1.6.39.tar.gz\n./configure --enable-shared --prefix=$WRF_LIBRARY\nmake\nmake install\n</code></pre>"},{"location":"WRF/build/#7-jasper","title":"7. jasper","text":"<pre><code>wget https://www2.mmm.ucar.edu/wrf/OnLineTutorial/compile_tutorial/tar_files/jasper-1.900.1.tar.gz\n# wget https://github.com/jasper-software/jasper/releases/download/version-4.0.0/jasper-4.0.0.tar.gz\n./configure --enable-shared --prefix=$WRF_LIBRARY\nmake\nmake install\n</code></pre>"},{"location":"WRF/build/#8-mpich","title":"8. mpich \u5e76\u884c\u8ba1\u7b97","text":"<pre><code>wget https://www.mpich.org/static/downloads/3.0.4/mpich-3.0.4.tar.gz\n./configure --prefix=$WRF_LIBRARY\nmake\nmake install\n</code></pre>"},{"location":"WRF/build/#wrf_1","title":"WRF","text":"<pre><code>wget https://github.com/wrf-model/WRF/releases/download/v4.4.1/v4.4.1.tar.gz\n./configure arw\n./compile em_real\n# -&gt; main/ndown.exe\n#    main/real.exe\n#    main/tc.exe\n#    main/wrf.exe\n</code></pre>"},{"location":"WRF/build/#wps","title":"WPS","text":"<pre><code>wget https://github.com/wrf-model/WPS/archive/refs/tags/v4.4.tar.gz\n./configure\n./compile\n</code></pre>"},{"location":"WRF/build/#wrdfda","title":"WRDFDA","text":""},{"location":"WRF/build/#wrfda","title":"WRFDA","text":"<p>3dvar</p> <pre><code>./configure wrfda\n./compile all_wrfvar\n# \u751f\u6210 44 \u4e2a\u53ef\u6267\u884c\u6587\u4ef6\nls -l var/build/*exe var/obsproc/src/obsproc.exe\n</code></pre> <p>4dvar</p> <pre><code># \u7f16\u8bd1 wrfplus\n./configure wrfplus\n./compile wrfplus\nexport WRFPLUS_DIR=/home/ahri/WRFV4/WRFPLUS\n# \u7f16\u8bd1 wrfda 4dvar\n./configure 4dvar\n./compile all_wrfvar\n</code></pre>"},{"location":"WRF/build/#gsi","title":"GSI","text":"<p>\u4f9d\u8d56</p> <pre><code>yum install blas-devel lapack-devel\n</code></pre> <pre><code>export FFLAGS=\"-m64 -std=legacy\"\n\n# ENKF(ENSEMBLE KALMAN FILTER SYSTEM \u96c6\u5408\u5361\u5c14\u66fc\u6ee4\u6ce2\u7cfb\u7edf)\nwget https://dtcenter.org/sites/default/files/comGSIv3.7_EnKFv1.3.tar.gz\nmkdir build\ncd build\ncmake ..\n# for huadi\ncmake .. -DZLIB_INCLUDE_DIR=/apps/include -DZLIB_LIBRARY=/apps/lib\nmake\n</code></pre>"},{"location":"WRF/build/#utils","title":"utils","text":""},{"location":"WRF/build/#ncview","title":"ncview","text":"<pre><code># CentOS\nwget ftp://cirrus.ucsd.edu/pub/ncview/ncview-2.1.7.tar.gz\nyum install xorg-x11* libXaw*\n./configure --with-nc-config=$WRF_LIBRARY/bin/nc-config --with-udunits2_incdir=$WRF_LIBRARY/include --with-udunits2_libdir=$WRF_LIBRARY/lib --with-png_incdir=$WRF_LIBRARY/include --with-png_libdir=$WRF_LIBRARY/lib --prefix=$WRF_LIBRARY\nmake\nmake install\n# Ubuntu\nsudo apt-get install ncview\n</code></pre>"},{"location":"WRF/build/#nco","title":"nco","text":"<pre><code>wget https://github.com/nco/nco/archive/refs/tags/5.0.3.tar.gz\n./configure --enable-netcdf-4 --enable-udunits2 NETCDF_ROOT=$WRF_LIBRARY UDUNITS2_PATH=$WRF_LIBRARY --prefix=$WRF_LIBRARY\nmake\nmake install\n</code></pre>"},{"location":"WRF/build/#cdo","title":"cdo","text":"<pre><code>wget https://code.mpimet.mpg.de/attachments/download/26370/cdo-2.0.0.tar.gz\n./configure --with-szlib=$WRF_LIBRARY --with-hdf5=$WRF_LIBRARY --with-netcdf=$WRF_LIBRARY --with-udunits2=$WRF_LIBRARY --prefix=$WRF_LIBRARY\nmake\nmake install\n</code></pre>"},{"location":"WRF/build/#ncl","title":"ncl","text":"<pre><code># 4. ncl(NCAR Command Language) https://www.ncl.ucar.edu/\n# https://www.ncl.ucar.edu/Download/list_of_binaries.shtml\n# conda\nconda install -c conda-forge ncl\n# CentOS\nwget https://www.earthsystemgrid.org/dataset/ncl.662.dap/file/ncl_ncarg-6.6.2-CentOS7.6_64bit_gnu485.tar.gz\n# Ubuntu\nsudo apt install ncl-ncarg\n</code></pre>"},{"location":"WRF/data/","title":"\u6c14\u8c61\u6570\u636e","text":"<ul> <li>\u7ad9\u70b9\u6570\u636e</li> <li>\u536b\u661f\u6570\u636e\uff08\u9065\u611f\u6570\u636e\uff09</li> <li>\u518d\u5206\u6790\u6570\u636e fnl</li> <li>\u6a21\u5f0f\u6570\u636e</li> </ul>"},{"location":"WRF/data/#_2","title":"\u6c14\u8c61\u6570\u636e\u683c\u5f0f","text":"<ul> <li>netCDF</li> <li>GRIB</li> <li>PrepBUFR/BUFR</li> </ul> <p>BUFR_PrepBUFR_User_Guide_v1</p> <p>NCEP BUFR File Structure</p> <p>BUFR format</p>"},{"location":"WRF/data/#wrf","title":"WRF \u6570\u636e\u4e0b\u8f7d","text":"<ul> <li>WRF - Free Data</li> <li>NCEP Data Products GFS and GDAS</li> </ul>"},{"location":"WRF/data/#_3","title":"\u5b9e\u65f6\u6570\u636e\uff08\u8f6e\u6362\uff09","text":"<p>gfs(10\u5929\u8f6e\u6362)</p> <p>prepbufr(2\u5929\u8f6e\u6362)</p>"},{"location":"WRF/data/#_4","title":"\u5386\u53f2\u6570\u636e","text":"<p>gfs \u5168\u7403\u9884\u62a5 0.25\u00b0</p> <p>gfs fnl 1\u00b0</p> <p>\u9ad8\u7a7a\u548c\u5730\u9762\u89c2\u6d4b\u6570\u636e prepbufr</p> <ul> <li>NOAA (National Oceanic and Atmospheric Administration \u7f8e\u56fd\u56fd\u5bb6\u5927\u6c14\u548c\u6d77\u6d0b\u7ba1\u7406\u5c40)</li> <li>NWS (National Weather Service \u56fd\u5bb6\u6c14\u8c61\u5c40)</li> <li>NCEP (National Centers for Environmental Prediction \u56fd\u5bb6\u73af\u5883\u9884\u6d4b\u4e2d\u5fc3)</li> <li>UCAR (University Corporation for Atmospheric Research \u5927\u5b66\u5927\u6c14\u7814\u7a76\u516c\u53f8)</li> <li>NCAR (National Center for Atmospheric Research \u56fd\u5bb6\u5927\u6c14\u7814\u7a76\u4e2d\u5fc3)</li> </ul>"},{"location":"WRF/error/","title":"WPS/WRF/GSI ERROR","text":""},{"location":"WRF/error/#1-v_cfl","title":"1. v_cfl \u79ef\u5206\u9519\u8bef","text":""},{"location":"WRF/error/#_1","title":"\u95ee\u9898\u63cf\u8ff0","text":"<p>rsl.out.0000 \u51fa\u73b0\u4e0b\u9762\u65e5\u5fd7</p> <pre><code>d03 2022-11-06_06:04:40         1444  points exceeded v_cfl = 2 in domain d03 at time 2022-11-06_06:04:40 hours\nd03 2022-11-06_06:04:40 Max   W:      6      1     33 W:   -3.07  w-cfl:    3.89  dETA:    0.01\n</code></pre>"},{"location":"WRF/error/#_2","title":"\u89e3\u51b3\u529e\u6cd5","text":"<p>\u4fee\u6539\u5d4c\u5957\u533a\u57df\uff0c\u8ba9 d02 \u548c d03 \u4e0d\u91cd\u5408</p>"},{"location":"WRF/error/#2-gsi","title":"2. GSI \u540c\u5316\u5931\u8d25","text":""},{"location":"WRF/error/#_3","title":"\u95ee\u9898\u63cf\u8ff0","text":"<p><code>ifort</code> \u53ef\u80fd\u6253\u5370\u4ee5\u4e0b\u5806\u6808\u95ee\u9898</p> <pre><code>forrtl: severe (174): SIGSEGV, segmentation fault occurred\nImage              PC                Routine            Line        Source\ngsi.x              0000000001961669  Unknown               Unknown  Unknown\nlibpthread-2.28.s  0000151EFCD88C20  Unknown               Unknown  Unknown\ngsi.x              000000000131381F  frfhvo_                    63  smoothzrf.f90\ngsi.x              0000000001086A52  bkgcov_                    67  bkgcov.f90\nlibiomp5.so        0000151EF5934A43  __kmp_invoke_micr     Unknown  Unknown\nlibiomp5.so        0000151EF58F7CDA  Unknown               Unknown  Unknown\nlibiomp5.so        0000151EF58F723B  Unknown               Unknown  Unknown\nlibiomp5.so        0000151EF5934EB1  Unknown               Unknown  Unknown\nlibpthread-2.28.s  0000151EFCD7E17A  Unknown               Unknown  Unknown\nlibc-2.28.so       0000151EF462CDC3  clone                 Unknown  Unknown\n</code></pre>"},{"location":"WRF/error/#_4","title":"\u89e3\u51b3\u529e\u6cd5","text":"<p>\u589e\u52a0 <code>OpenMP</code> \u7684\u5806\u6808\u5927\u5c0f\uff08<code>ifort</code> \u9ed8\u8ba4 4M\uff09</p> <pre><code># \u6839\u636e\u6a21\u62df\u533a\u57df\u5927\u5c0f\u9002\u5f53\u8bbe\u7f6e (2^n)M\nexport OMP_STACKSIZE=16M\n</code></pre>"},{"location":"WRF/error/#3-mpi","title":"3. MPI \u95ee\u9898","text":""},{"location":"WRF/error/#_5","title":"\u95ee\u9898\u63cf\u8ff0","text":"<p>\u53ef\u6267\u884c\u6587\u4ef6\u8c03\u7528 <code>Intel MPI</code> \u65f6\u51fa\u73b0\u4e0b\u9762\u9519\u8bef</p> <pre><code>Abort(1094031) on node 0 (rank 0 in comm 0): Fatal error in PMPI_Init: Other MPI error, error stack:\nMPIR_Init_thread(607)......:\nMPID_Init(793).............:\nMPIDI_NM_mpi_init_hook(667): OFI addrinfo() failed (ofi_init.h:667:MPIDI_NM_mpi_init_hook:No data available)\n</code></pre>"},{"location":"WRF/error/#_6","title":"\u89e3\u51b3\u65b9\u6cd5","text":"<p>\u6dfb\u52a0 OFI \u73af\u5883\u53d8\u91cf\u4ee5\u94fe\u63a5\u5230 <code>libfabric</code>, \u8fdb\u800c\u94fe\u63a5\u5230 <code>Intel MPI</code></p> <pre><code>export FI_PROVIDER=sockets\n# export FI_PROVIDER=tcp  # \u5e94\u8be5\u4e5f\u53ef\u4ee5\n</code></pre>"},{"location":"WRF/error/#4-realexe-error","title":"4. real.exe ERROR","text":""},{"location":"WRF/error/#_7","title":"\u95ee\u9898\u63cf\u8ff0","text":"<p>\u56fd\u5bb6\u6570\u636e\u96c6 CMA-GFS real.exe rsl.error.0000 \u51fa\u73b0\u4e0b\u9762\u7684\u9519\u8bef</p> <pre><code>Not enough soil temperature data for Noah LSM scheme\n</code></pre>"},{"location":"WRF/error/#_8","title":"\u89e3\u51b3\u65b9\u6cd5","text":"<p>sf_surface_physics(\u9ed8\u8ba4\u4f7f\u7528\u7684 CONUS \u5957\u88c5 = 2) \u66f4\u6539\u4e3a 1 \u4e4b\u540e\u53c8\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c</p>"},{"location":"WRF/error/#5-metgridexe-error-error-in-ext-pkg-write-field","title":"5. metgrid.exe ERROR: Error in ext pkg write field","text":""},{"location":"WRF/error/#_9","title":"\u95ee\u9898\u63cf\u8ff0","text":"<p>2024 \u5e74\u7f8e\u56fd GFS \u6570\u636e\u96c6\u8fd0\u884c metgrid.exe \u65f6\u5931\u8d25\uff0c2023 \u5e74\u7684\u6570\u636e\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\uff0clog.metgrib \u51fa\u73b0\u4e0b\u9762\u9519\u8bef</p> <pre><code>ERROR: Error in ext_pkg_write_field\n</code></pre>"},{"location":"WRF/error/#_10","title":"\u89e3\u51b3\u65b9\u6cd5","text":"<p>gfs \u6570\u636e\u96c6\u6709\u95ee\u9898\uff0c\u66f4\u6362\u5176\u4ed6\u5929\u6570\u7684\u6570\u636e\u96c6</p>"},{"location":"WRF/error/#6-cma-gfs-ungribexe","title":"6. CMA-GFS \u6570\u636e\u96c6 ungrib.exe \u8fd0\u884c\u6162","text":""},{"location":"WRF/error/#_11","title":"\u95ee\u9898\u63cf\u8ff0","text":"<p>\u8fd0\u884c24\u5c0f\u65f6\u7684\u60c5\u51b5\u4e0b\uff1a \u56fd\u5bb6\u6570\u636e\u96c6\u7cbe\u5ea6\u662f 0.125\u00b0\uff0c\u7528\u65f6 20~30 \u5206\u949f \u7f8e\u56fd\u6570\u636e\u96c6\u7cbe\u5ea6\u662f 0.25\u00b0\uff0c\u7528\u65f6 2~3 \u5206\u949f \u6b63\u5e38\u5e94\u8be5\u61624\u500d\u5de6\u53f3\uff0c\u5b9e\u9645\u616210\u500d\u5de6\u53f3</p>"},{"location":"WRF/error/#_12","title":"\u89e3\u51b3\u65b9\u6cd5","text":"<p>\u6682\u65e0\uff0c\u4f7f\u7528\u591a\u53f0\u673a\u5668\u5e76\u884c</p>"},{"location":"WRF/run/","title":"WRF \u8fd0\u884c","text":"<pre><code>mkdir /home/ahri/WRFV4/run\ncd /home/ahri/WRFV4/run\n</code></pre> <p>\u5bf9\u4e8e\u5c0f\u578b\u8ba1\u7b97\u673a\u53ef\u80fd\u9700\u8981\u8fdb\u884c\u5982\u4e0b\u8bbe\u7f6e</p> <pre><code>ulimit -s unlimited\nexport OMP_STACKSIZE=16M  # 2^n\n</code></pre>"},{"location":"WRF/run/#wps","title":"WPS","text":"<p>\u8bbe\u7f6e\u94fe\u63a5</p> <pre><code>ln -sf /home/ahri/WRFV4/WPS/geogrid.exe\nln -sf /home/ahri/WRFV4/WPS/ungrib.exe\nln -sf /home/ahri/WRFV4/WPS/metgrid.exe\nln -sf /home/ahri/WRFV4/WPS/link_grib.csh\n</code></pre>"},{"location":"WRF/run/#geogridexe","title":"geogrid.exe","text":"<p>\u5b9a\u4e49\u6a21\u578b\u57df\u5e76\u5c06\u9759\u6001\u5730\u7406\u6570\u636e\u63d2\u503c\u5230\u7f51\u683c</p> <p>\u4e0b\u8f7d\u9759\u6001\u5730\u56fe\u6570\u636e</p> <pre><code>wget https://www2.mmm.ucar.edu/wrf/src/wps_files/geog_high_res_mandatory.tar.gz\n</code></pre> <p>\u914d\u7f6e\u6587\u4ef6 namelist.wps (doc)</p> <p>\u67e5\u770b\u9759\u6001\u5730\u56fe\u6587\u4ef6\u6765\u786e\u5b9a\u533a\u57df\u662f\u5426\u6b63\u786e</p> <pre><code>ncl ./utils/plotgrids_new.ncl\n</code></pre> <p>geogrid.exe</p> <pre><code># in: namelist.wps\n./geogrid.exe\n# out: geo_em.d0*.nc\n</code></pre>"},{"location":"WRF/run/#ungribexe","title":"ungrib.exe","text":"<p>\u4ece GRIB \u683c\u5f0f\u7684\u6587\u4ef6\u4e2d\u63d0\u53d6\u6c14\u8c61\u5b57\u6bb5\uff08\u5355\u6838\u8fd0\u884c\uff09</p> <p>\u8bbe\u7f6e Vtable</p> <pre><code>ln -sf ./ungrib/Variable_Tables/Vtable.GFS ./Vtable\n</code></pre> <p>\u94fe\u63a5\u6570\u636e</p> <pre><code># in: gfs/fnl file\n./link_grib.csh datasets_path/*\n# out: GRIBFILE.AAA, GRIBFILE.AAB ...\n</code></pre> <p>ungrib.exe</p> <pre><code># in: GRIBFILE.AAA, GRIBFILE.AAB ...\n./ungrib.exe\n# out: FILE:YYYY-MM-DD_HH\n</code></pre> <p>\u67e5\u770b\u5185\u5bb9\uff08\u53ef\u9009\uff09</p> <pre><code>./util/rd_intermediate.exe FILE:YYYY-MM-DD_HH\n</code></pre>"},{"location":"WRF/run/#metgridexe","title":"metgrid.exe","text":"<p>\u5c06 ungrib.exe \u63d0\u53d6\u7684\u6c14\u8c61\u6570\u636e\u6c34\u5e73\u63d2\u503c\u5230 geogrid.exe \u5b9a\u4e49\u7684\u6a21\u578b\u7f51\u683c\u4e2d</p> <pre><code># in: geo_em.d0*.nc, FILE:YYYY-MM-DD_HH\n./metgrid.exe\n# out: met_em.d0*.YYYY-MM-DD_HH:MM:SS.nc\n</code></pre>"},{"location":"WRF/run/#wrfgsi","title":"WRF(&amp;GSI)","text":"<pre><code>ln -sf /home/ahri/WRFV4/WRF/run/real.exe\nln -sf /home/ahri/WRFV4/WRF/run/wrf.exe\n</code></pre>"},{"location":"WRF/run/#realexe","title":"real.exe","text":"<p>\u6c14\u8c61\u573a\u7684\u5782\u76f4\u63d2\u503c\u3001\u751f\u6210\u521d\u59cb\u6761\u4ef6\u548c\u8fb9\u754c\u6761\u4ef6\u3001\u4e00\u81f4\u6027\u68c0\u67e5</p> <p>\u914d\u7f6e\u6587\u4ef6 namelist.input ra_lw_physics Longwave Radiation \u957f\u6ce2\u8f90\u5c04 ra_sw-physics Shortwave Radiation \u77ed\u6ce2\u8f90\u5c04 sf_surface_physics land-surface option \u8def\u9762\u8fc7\u7a0b</p> <p>real.exe</p> <pre><code># in: met_em.d0*.YYYY-MM-DD_HH:MM:SS.nc\nmpirun -np 4 ./real.exe\n# out: wrfbdy_d0*\n#      wrfinput_d0*\n#      ...\n</code></pre>"},{"location":"WRF/run/#wrfdagsi","title":"wrfda/gsi(\u53ef\u9009)","text":"<pre><code>mkdir /home/ahri/WRFV4/run/da\n</code></pre> <p>\u89c2\u6d4b\u6570\u636e\u540c\u5316</p>"},{"location":"WRF/run/#3dvar","title":"3dvar","text":"<p>\u5b98\u65b9\u793a\u4f8b</p> <pre><code>export WRFDA_DIR=/home/ahri/WRFV4/WRFDA\nexport DATA_DIR=/home/ahri/WRFV4/test_wrfda/data\n\nln -sf $WRFDA_DIR/run/LANDUSE.TBL\nln -sf $WRFDA_DIR/var/build/da_wrfvar.exe\n\n# \u94fe\u63a5\u80cc\u666f\u8bef\u5dee\u6587\u4ef6\nln -sf $DATA_DIR/be/be.dat\n\n# \u9002\u7528\u4e8e NCEP \u7684 \u80cc\u666f\u8bef\u5dee\u6587\u4ef6\nln -sf /home/ahri/WRFV4/WRFDA/var/run/be.dat.cv3 be.dat\n\n# \u94fe\u63a5 ascii \u89c2\u6d4b\u6587\u4ef6\nln -sf $DATA_DIR/ob/2008020512/ob.ascii\n# \u6216\u8005\u94fe\u63a5 prepbufr \u5e38\u89c4\u89c2\u6d4b\u6587\u4ef6\nln -fs $DATA_DIR/ob/2008020512/gdas1.t12z.prepbufr.nr ob.bufr\n# \u94fe\u63a5\u7b2c\u4e00\u6b21\u731c\u6d4b\u6587\u4ef6\nln -sf $DATA_DIR/rc/2008020512/wrfinput_d01 ./fg\n# \u590d\u5236 namelist.input\ncp $DATA_DIR/namelist.input.3dvar namelist.inpb ut\n\nulimit -s unlimited\nmpirun -np 16 ./da_wrfvar.exe\n</code></pre>"},{"location":"WRF/run/#bedat","title":"\u751f\u6210 be.dat","text":"<p>\u590d\u5236 gen_be_wrapper.ksh</p> <pre><code>cp $WRFDA_DIR/var/scripts/gen_be/gen_be_wrapper.ksh .\n</code></pre> <p>\u53c2\u8003\uff1a</p> <ul> <li>https://zhuanlan.zhihu.com/p/565561915</li> </ul>"},{"location":"WRF/run/#4dvar","title":"4dvar","text":"<p>\u5b98\u65b9\u793a\u4f8b(\u8fd0\u884c\u5931\u8d25)</p> <pre><code>export WRFDA_DIR=/home/ahri/WRFV4/WRFDA\nexport DATA_DIR=/home/ahri/WRFV4/test_wrfda/data\n\ncd /home/ahri/WRFV4/test_wrfda\n\nln -fs $DATA_DIR/ob/2008020512/ob01.ascii ob01.ascii\nln -fs $DATA_DIR/ob/2008020513/ob02.ascii ob02.ascii\nln -fs $DATA_DIR/ob/2008020514/ob03.ascii ob03.ascii\nln -fs $DATA_DIR/ob/2008020515/ob04.ascii ob04.ascii\nln -fs $DATA_DIR/ob/2008020516/ob05.ascii ob05.ascii\nln -fs $DATA_DIR/ob/2008020517/ob06.ascii ob06.ascii\nln -fs $DATA_DIR/ob/2008020518/ob07.ascii ob07.ascii\n\nln -fs $DATA_DIR/ob/2008020512/gdas1.t12z.prepbufr.nr ob01.bufr\nln -fs $DATA_DIR/ob/2008020518/gdas1.t18z.prepbufr.nr ob02.bufr\n\nln -fs $DATA_DIR/rc/2008020512/wrfinput_d01\nln -fs $DATA_DIR/rc/2008020512/wrfbdy_d01\nln -fs wrfinput_d01 fg\n\nln -fs $DATA_DIR/be/be.dat\nln -fs $WRFDA_DIR/run/LANDUSE.TBL\nln -fs $WRFDA_DIR/run/GENPARM.TBL\nln -fs $WRFDA_DIR/run/SOILPARM.TBL\nln -fs $WRFDA_DIR/run/VEGPARM.TBL\nln -fs $WRFDA_DIR/run/RRTM_DATA_DBL RRTM_DATA\nln -sf $WRFDA_DIR/run/CAMtr_volume_mixing_ratio\nln -sf $WRFDA_DIR/var/build/da_wrfvar.exe\n\ncp $DATA_DIR/namelist.input.4dvar namelist.input\n</code></pre> <p>\u751f\u6210 be.dat \u80cc\u666f\u8bef\u5dee\u6587\u4ef6</p> <pre><code>cp WRFDA/var/scripts/gen_be/gen_be_wrapper.ksh .\n</code></pre>"},{"location":"WRF/run/#gsix","title":"gsi.x","text":"<p>\u89c2\u6d4b\u6570\u636e\u540c\u5316</p> <p>DTC || Community GSI Users Page</p> <p>doc</p> <p>CRTM (Community Radiative Transfer Model \u793e\u533a\u8f90\u5c04\u8f6c\u79fb\u6a21\u578b)</p> <p>fix files</p> <p>\u8c03\u7528 ksh \u811a\u672c\u8fd0\u884c gsi.x</p> <pre><code>cd ~/GSI\nksh /ush/comgsi_run_regional.ksh\n</code></pre> comgsi_run_regional.ksh<pre><code>#!/bin/ksh\n#####################################################\n# machine set up (users should change this part)\n#####################################################\n\nset -x\n#\n# GSIPROC = processor number used for GSI analysis\n#------------------------------------------------\n  GSIPROC=1\n  ARCH='LINUX_LSF'\n\n# Supported configurations:\n            # IBM_LSF,\n            # LINUX, LINUX_LSF, LINUX_PBS,\n            # DARWIN_PGI\n#\n#####################################################\n# case set up (users should change this part)\n#####################################################\n#\n# ANAL_TIME= analysis time  (YYYYMMDDHH)\n# WORK_ROOT= working directory, where GSI runs\n# PREPBURF = path of PreBUFR conventional obs\n# BK_FILE  = path and name of background file\n# OBS_ROOT = path of observations files\n# FIX_ROOT = path of fix files\n# GSI_EXE  = path and name of the gsi executable \n# ENS_ROOT = path where ensemble background files exist\n  ANAL_TIME=2017051318\n  JOB_DIR=the_job_directory\n     #normally you put run scripts here and submit jobs form here, require a copy of gsi.x at this directory\n  RUN_NAME=a_descriptive_run_name_such_as_case05_3denvar_etc\n  OBS_ROOT=the_directory_where_observation_files_are_located\n  BK_ROOT=the_directory_where_background_files_are_located\n  GSI_ROOT=the_comgsi_main directory where src/ ush/ fix/ etc are located\n  CRTM_ROOT=the_CRTM_directory\n  ENS_ROOT=the_directory_where_ensemble_backgrounds_are_located\n      #ENS_ROOT is not required if not running hybrid EnVAR \n  HH=`echo $ANAL_TIME | cut -c9-10`\n  GSI_EXE=${JOB_DIR}/gsi.x  #assume you have a copy of gsi.x here\n  WORK_ROOT=${JOB_DIR}/${RUN_NAME}\n  FIX_ROOT=${GSI_ROOT}/fix\n  GSI_NAMELIST=${GSI_ROOT}/ush/comgsi_namelist.sh\n  PREPBUFR=${OBS_ROOT}/nam.t${HH}z.prepbufr.tm00\n  BK_FILE=${BK_ROOT}/wrfinput_d01.${ANAL_TIME}\n#\n#------------------------------------------------\n# bk_core= which WRF core is used as background (NMM or ARW or NMMB)\n# bkcv_option= which background error covariance and parameter will be used \n#              (GLOBAL or NAM)\n# if_clean = clean  : delete temperal files in working directory (default)\n#            no     : leave running directory as is (this is for debug only)\n# if_observer = Yes  : only used as observation operater for enkf\n# if_hybrid   = Yes  : Run GSI as 3D/4D EnVar\n# if_4DEnVar  = Yes  : Run GSI as 4D EnVar\n# if_nemsio = Yes    : The GFS background files are in NEMSIO format\n# if_oneob  = Yes    : Do single observation test\n  if_hybrid=No     # Yes, or, No -- case sensitive !\n  if_4DEnVar=No    # Yes, or, No -- case sensitive (set if_hybrid=Yes first)!\n  if_observer=No   # Yes, or, No -- case sensitive !\n  if_nemsio=No     # Yes, or, No -- case sensitive !\n  if_oneob=No      # Yes, or, No -- case sensitive !\n\n  bk_core=ARW\n  bkcv_option=NAM\n  if_clean=clean\n#\n# setup whether to do single obs test\n  if [ ${if_oneob} = Yes ]; then\n    if_oneobtest='.true.'\n  else\n    if_oneobtest='.false.'\n  fi\n#\n# setup for GSI 3D/4D EnVar hybrid\n  if [ ${if_hybrid} = Yes ] ; then\n    PDYa=`echo $ANAL_TIME | cut -c1-8`\n    cyca=`echo $ANAL_TIME | cut -c9-10`\n    gdate=`date -u -d \"$PDYa $cyca -6 hour\" +%Y%m%d%H` #guess date is 6hr ago\n    gHH=`echo $gdate |cut -c9-10`\n    datem1=`date -u -d \"$PDYa $cyca -1 hour\" +%Y-%m-%d_%H:%M:%S` #1hr ago\n    datep1=`date -u -d \"$PDYa $cyca 1 hour\"  +%Y-%m-%d_%H:%M:%S`  #1hr later\n    if [ ${if_nemsio} = Yes ]; then\n      if_gfs_nemsio='.true.'\n      ENSEMBLE_FILE_mem=${ENS_ROOT}/gdas.t${gHH}z.atmf006s.mem\n    else\n      if_gfs_nemsio='.false.'\n      ENSEMBLE_FILE_mem=${ENS_ROOT}/sfg_${gdate}_fhr06s_mem\n    fi\n\n    if [ ${if_4DEnVar} = Yes ] ; then\n      BK_FILE_P1=${BK_ROOT}/wrfout_d01_${datep1}\n      BK_FILE_M1=${BK_ROOT}/wrfout_d01_${datem1}\n\n      if [ ${if_nemsio} = Yes ]; then\n        ENSEMBLE_FILE_mem_p1=${ENS_ROOT}/gdas.t${gHH}z.atmf009s.mem\n        ENSEMBLE_FILE_mem_m1=${ENS_ROOT}/gdas.t${gHH}z.atmf003s.mem\n      else\n        ENSEMBLE_FILE_mem_p1=${ENS_ROOT}/sfg_${gdate}_fhr09s_mem\n        ENSEMBLE_FILE_mem_m1=${ENS_ROOT}/sfg_${gdate}_fhr03s_mem\n      fi\n    fi\n  fi\n\n# The following two only apply when if_observer = Yes, i.e. run observation operator for EnKF\n# no_member     number of ensemble members\n# BK_FILE_mem   path and base for ensemble members\n  no_member=20\n  BK_FILE_mem=${BK_ROOT}/wrfarw.mem\n#\n#\n#####################################################\n# Users should NOT make changes after this point\n#####################################################\n#\nBYTE_ORDER=Big_Endian\n# BYTE_ORDER=Little_Endian\n\ncase $ARCH in\n   'IBM_LSF')\n      ###### IBM LSF (Load Sharing Facility)\n      RUN_COMMAND=\"mpirun.lsf \" ;;\n\n   'LINUX')\n      if [ $GSIPROC = 1 ]; then\n         #### Linux workstation - single processor\n         RUN_COMMAND=\"\"\n      else\n         ###### Linux workstation -  mpi run\n        RUN_COMMAND=\"mpirun -np ${GSIPROC} \"\n      fi ;;\n\n   'LINUX_LSF')\n      ###### LINUX LSF (Load Sharing Facility)\n      RUN_COMMAND=\"mpirun.lsf \" ;;\n\n   'LINUX_PBS')\n      #### Linux cluster PBS (Portable Batch System)\n      RUN_COMMAND=\"mpirun -np ${GSIPROC} \" ;;\n\n   'DARWIN_PGI')\n      ### Mac - mpi run\n      if [ $GSIPROC = 1 ]; then\n         #### Mac workstation - single processor\n         RUN_COMMAND=\"\"\n      else\n         ###### Mac workstation -  mpi run\n         RUN_COMMAND=\"mpirun -np ${GSIPROC} -machinefile ~/mach \"\n      fi ;;\n\n   * )\n     print \"error: $ARCH is not a supported platform configuration.\"\n     exit 1 ;;\nesac\n\n\n##################################################################################\n# Check GSI needed environment variables are defined and exist\n#\n\n# Make sure ANAL_TIME is defined and in the correct format\nif [ ! \"${ANAL_TIME}\" ]; then\n  echo \"ERROR: \\$ANAL_TIME is not defined!\"\n  exit 1\nfi\n\n# Make sure WORK_ROOT is defined and exists\nif [ ! \"${WORK_ROOT}\" ]; then\n  echo \"ERROR: \\$WORK_ROOT is not defined!\"\n  exit 1\nfi\n\n# Make sure the background file exists\nif [ ! -r \"${BK_FILE}\" ]; then\n  echo \"ERROR: ${BK_FILE} does not exist!\"\n  exit 1\nfi\n\n# Make sure OBS_ROOT is defined and exists\nif [ ! \"${OBS_ROOT}\" ]; then\n  echo \"ERROR: \\$OBS_ROOT is not defined!\"\n  exit 1\nfi\nif [ ! -d \"${OBS_ROOT}\" ]; then\n  echo \"ERROR: OBS_ROOT directory '${OBS_ROOT}' does not exist!\"\n  exit 1\nfi\n\n# Set the path to the GSI static files\nif [ ! \"${FIX_ROOT}\" ]; then\n  echo \"ERROR: \\$FIX_ROOT is not defined!\"\n  exit 1\nfi\nif [ ! -d \"${FIX_ROOT}\" ]; then\n  echo \"ERROR: fix directory '${FIX_ROOT}' does not exist!\"\n  exit 1\nfi\n\n# Set the path to the CRTM coefficients \nif [ ! \"${CRTM_ROOT}\" ]; then\n  echo \"ERROR: \\$CRTM_ROOT is not defined!\"\n  exit 1\nfi\nif [ ! -d \"${CRTM_ROOT}\" ]; then\n  echo \"ERROR: fix directory '${CRTM_ROOT}' does not exist!\"\n  exit 1\nfi\n\n\n# Make sure the GSI executable exists\nif [ ! -x \"${GSI_EXE}\" ]; then\n  echo \"ERROR: ${GSI_EXE} does not exist!\"\n  exit 1\nfi\n\n# Check to make sure the number of processors for running GSI was specified\nif [ -z \"${GSIPROC}\" ]; then\n  echo \"ERROR: The variable $GSIPROC must be set to contain the number of processors to run GSI\"\n  exit 1\nfi\n\n#\n##################################################################################\n# Create the ram work directory and cd into it\n\nworkdir=${WORK_ROOT}\necho \" Create working directory:\" ${workdir}\n\nif [ -d \"${workdir}\" ]; then\n  rm -rf ${workdir}\nfi\nmkdir -p ${workdir}\ncd ${workdir}\n\n#\n##################################################################################\n\necho \" Copy GSI executable, background file, and link observation bufr to working directory\"\n\n# Save a copy of the GSI executable in the workdir\ncp ${GSI_EXE} gsi.x\n\n# Bring over background field (it's modified by GSI so we can't link to it)\ncp ${BK_FILE} ./wrf_inout\nif [ ${if_4DEnVar} = Yes ] ; then\n  cp ${BK_FILE_P1} ./wrf_inou3\n  cp ${BK_FILE_M1} ./wrf_inou1\nfi\n\n\n# Link to the prepbufr data\nln -s ${PREPBUFR} ./prepbufr\n\n# ln -s ${OBS_ROOT}/gdas1.t${HH}z.sptrmm.tm00.bufr_d tmirrbufr\n# Link to the radiance data\nsrcobsfile[1]=${OBS_ROOT}/gdas1.t${HH}z.satwnd.tm00.bufr_d\ngsiobsfile[1]=satwnd\nsrcobsfile[2]=${OBS_ROOT}/gdas1.t${HH}z.1bamua.tm00.bufr_d\ngsiobsfile[2]=amsuabufr\nsrcobsfile[3]=${OBS_ROOT}/gdas1.t${HH}z.1bhrs4.tm00.bufr_d\ngsiobsfile[3]=hirs4bufr\nsrcobsfile[4]=${OBS_ROOT}/gdas1.t${HH}z.1bmhs.tm00.bufr_d\ngsiobsfile[4]=mhsbufr\nsrcobsfile[5]=${OBS_ROOT}/gdas1.t${HH}z.1bamub.tm00.bufr_d\ngsiobsfile[5]=amsubbufr\nsrcobsfile[6]=${OBS_ROOT}/gdas1.t${HH}z.ssmisu.tm00.bufr_d\ngsiobsfile[6]=ssmirrbufr\n# srcobsfile[7]=${OBS_ROOT}/gdas1.t${HH}z.airsev.tm00.bufr_d\ngsiobsfile[7]=airsbufr\nsrcobsfile[8]=${OBS_ROOT}/gdas1.t${HH}z.sevcsr.tm00.bufr_d\ngsiobsfile[8]=seviribufr\nsrcobsfile[9]=${OBS_ROOT}/gdas1.t${HH}z.iasidb.tm00.bufr_d\ngsiobsfile[9]=iasibufr\nsrcobsfile[10]=${OBS_ROOT}/gdas1.t${HH}z.gpsro.tm00.bufr_d\ngsiobsfile[10]=gpsrobufr\nsrcobsfile[11]=${OBS_ROOT}/gdas1.t${HH}z.amsr2.tm00.bufr_d\ngsiobsfile[11]=amsrebufr\nsrcobsfile[12]=${OBS_ROOT}/gdas1.t${HH}z.atms.tm00.bufr_d\ngsiobsfile[12]=atmsbufr\nsrcobsfile[13]=${OBS_ROOT}/gdas1.t${HH}z.geoimr.tm00.bufr_d\ngsiobsfile[13]=gimgrbufr\nsrcobsfile[14]=${OBS_ROOT}/gdas1.t${HH}z.gome.tm00.bufr_d\ngsiobsfile[14]=gomebufr\nsrcobsfile[15]=${OBS_ROOT}/gdas1.t${HH}z.omi.tm00.bufr_d\ngsiobsfile[15]=omibufr\nsrcobsfile[16]=${OBS_ROOT}/gdas1.t${HH}z.osbuv8.tm00.bufr_d\ngsiobsfile[16]=sbuvbufr\nsrcobsfile[17]=${OBS_ROOT}/gdas1.t${HH}z.eshrs3.tm00.bufr_d\ngsiobsfile[17]=hirs3bufrears\nsrcobsfile[18]=${OBS_ROOT}/gdas1.t${HH}z.esamua.tm00.bufr_d\ngsiobsfile[18]=amsuabufrears\nsrcobsfile[19]=${OBS_ROOT}/gdas1.t${HH}z.esmhs.tm00.bufr_d\ngsiobsfile[19]=mhsbufrears\nsrcobsfile[20]=${OBS_ROOT}/rap.t${HH}z.nexrad.tm00.bufr_d\ngsiobsfile[20]=l2rwbufr\nsrcobsfile[21]=${OBS_ROOT}/rap.t${HH}z.lgycld.tm00.bufr_d\ngsiobsfile[21]=larcglb\nsrcobsfile[22]=${OBS_ROOT}/gdas1.t${HH}z.glm.tm00.bufr_d\ngsiobsfile[22]=\nii=1\nwhile [[ $ii -le 21 ]]; do\n   if [ -r \"${srcobsfile[$ii]}\" ]; then\n#      ln -s ${srcobsfile[$ii]}  ${gsiobsfile[$ii]}\n      echo \"link source obs file ${srcobsfile[$ii]}\"\n   fi\n   (( ii = $ii + 1 ))\ndone\n\n#\n##################################################################################\n\nifhyb=.false.\nif [ ${if_hybrid} = Yes ] ; then\n  ls ${ENSEMBLE_FILE_mem}* &gt; filelist02\n  if [ ${if_4DEnVar} = Yes ] ; then\n    ls ${ENSEMBLE_FILE_mem_p1}* &gt; filelist03\n    ls ${ENSEMBLE_FILE_mem_m1}* &gt; filelist01\n  fi\n\n  nummem=`more filelist02 | wc -l`\n  nummem=$((nummem -3 ))\n\n  if [[ ${nummem} -ge 5 ]]; then\n    ifhyb=.true.\n    ${ECHO} \" GSI hybrid uses ${ENSEMBLE_FILE_mem} with n_ens=${nummem}\"\n  fi\nfi\nif4d=.false.\nif [[ ${ifhyb} = .true. &amp;&amp; ${if_4DEnVar} = Yes ]] ; then\n  if4d=.true.\nfi\n#\n##################################################################################\n\necho \" Copy fixed files and link CRTM coefficient files to working directory\"\n\n# Set fixed files\n#   berror   = forecast model background error statistics\n#   specoef  = CRTM spectral coefficients\n#   trncoef  = CRTM transmittance coefficients\n#   emiscoef = CRTM coefficients for IR sea surface emissivity model\n#   aerocoef = CRTM coefficients for aerosol effects\n#   cldcoef  = CRTM coefficients for cloud effects\n#   satinfo  = text file with information about assimilation of brightness temperatures\n#   satangl  = angle dependent bias correction file (fixed in time)\n#   pcpinfo  = text file with information about assimilation of prepcipitation rates\n#   ozinfo   = text file with information about assimilation of ozone data\n#   errtable = text file with obs error for conventional data (regional only)\n#   convinfo = text file with information about assimilation of conventional data\n#   lightinfo= text file with information about assimilation of GLM lightning data\n#   bufrtable= text file ONLY needed for single obs test (oneobstest=.true.)\n#   bftab_sst= bufr table for sst ONLY needed for sst retrieval (retrieval=.true.)\n\nif [ ${bkcv_option} = GLOBAL ] ; then\n  echo ' Use global background error covariance'\n  BERROR=${FIX_ROOT}/${BYTE_ORDER}/nam_glb_berror.f77.gcv\n  OBERROR=${FIX_ROOT}/prepobs_errtable.global\n  if [ ${bk_core} = NMM ] ; then\n     ANAVINFO=${FIX_ROOT}/anavinfo_ndas_netcdf_glbe\n  fi\n  if [ ${bk_core} = ARW ] ; then\n    ANAVINFO=${FIX_ROOT}/anavinfo_arw_netcdf_glbe\n  fi\n  if [ ${bk_core} = NMMB ] ; then\n    ANAVINFO=${FIX_ROOT}/anavinfo_nems_nmmb_glb\n  fi\nelse\n  echo ' Use NAM background error covariance'\n  BERROR=${FIX_ROOT}/${BYTE_ORDER}/nam_nmmstat_na.gcv\n  OBERROR=${FIX_ROOT}/nam_errtable.r3dv\n  if [ ${bk_core} = NMM ] ; then\n     ANAVINFO=${FIX_ROOT}/anavinfo_ndas_netcdf\n  fi\n  if [ ${bk_core} = ARW ] ; then\n     ANAVINFO=${FIX_ROOT}/anavinfo_arw_netcdf\n  fi\n  if [ ${bk_core} = NMMB ] ; then\n     ANAVINFO=${FIX_ROOT}/anavinfo_nems_nmmb\n  fi\nfi\n\nSATANGL=${FIX_ROOT}/global_satangbias.txt\nSATINFO=${FIX_ROOT}/global_satinfo.txt\nCONVINFO=${FIX_ROOT}/global_convinfo.txt\nOZINFO=${FIX_ROOT}/global_ozinfo.txt\nPCPINFO=${FIX_ROOT}/global_pcpinfo.txt\nLIGHTINFO=${FIX_ROOT}/global_lightinfo.txt\n\n#  copy Fixed fields to working directory\n cp $ANAVINFO anavinfo\n cp $BERROR   berror_stats\n cp $SATANGL  satbias_angle\n cp $SATINFO  satinfo\n cp $CONVINFO convinfo\n cp $OZINFO   ozinfo\n cp $PCPINFO  pcpinfo\n cp $LIGHTINFO lightinfo\n cp $OBERROR  errtable\n#\n#    # CRTM Spectral and Transmittance coefficients\nCRTM_ROOT_ORDER=${CRTM_ROOT}/${BYTE_ORDER}\nemiscoef_IRwater=${CRTM_ROOT_ORDER}/Nalli.IRwater.EmisCoeff.bin\nemiscoef_IRice=${CRTM_ROOT_ORDER}/NPOESS.IRice.EmisCoeff.bin\nemiscoef_IRland=${CRTM_ROOT_ORDER}/NPOESS.IRland.EmisCoeff.bin\nemiscoef_IRsnow=${CRTM_ROOT_ORDER}/NPOESS.IRsnow.EmisCoeff.bin\nemiscoef_VISice=${CRTM_ROOT_ORDER}/NPOESS.VISice.EmisCoeff.bin\nemiscoef_VISland=${CRTM_ROOT_ORDER}/NPOESS.VISland.EmisCoeff.bin\nemiscoef_VISsnow=${CRTM_ROOT_ORDER}/NPOESS.VISsnow.EmisCoeff.bin\nemiscoef_VISwater=${CRTM_ROOT_ORDER}/NPOESS.VISwater.EmisCoeff.bin\nemiscoef_MWwater=${CRTM_ROOT_ORDER}/FASTEM6.MWwater.EmisCoeff.bin\naercoef=${CRTM_ROOT_ORDER}/AerosolCoeff.bin\ncldcoef=${CRTM_ROOT_ORDER}/CloudCoeff.bin\n\nln -s $emiscoef_IRwater ./Nalli.IRwater.EmisCoeff.bin\nln -s $emiscoef_IRice ./NPOESS.IRice.EmisCoeff.bin\nln -s $emiscoef_IRsnow ./NPOESS.IRsnow.EmisCoeff.bin\nln -s $emiscoef_IRland ./NPOESS.IRland.EmisCoeff.bin\nln -s $emiscoef_VISice ./NPOESS.VISice.EmisCoeff.bin\nln -s $emiscoef_VISland ./NPOESS.VISland.EmisCoeff.bin\nln -s $emiscoef_VISsnow ./NPOESS.VISsnow.EmisCoeff.bin\nln -s $emiscoef_VISwater ./NPOESS.VISwater.EmisCoeff.bin\nln -s $emiscoef_MWwater ./FASTEM6.MWwater.EmisCoeff.bin\nln -s $aercoef  ./AerosolCoeff.bin\nln -s $cldcoef  ./CloudCoeff.bin\n# Copy CRTM coefficient files based on entries in satinfo file\nfor file in `awk '{if($1!~\"!\"){print $1}}' ./satinfo | sort | uniq` ;do\n   ln -s ${CRTM_ROOT_ORDER}/${file}.SpcCoeff.bin ./\n   ln -s ${CRTM_ROOT_ORDER}/${file}.TauCoeff.bin ./\ndone\n\n# Only need this file for single obs test\n bufrtable=${FIX_ROOT}/prepobs_prep.bufrtable\n cp $bufrtable ./prepobs_prep.bufrtable\n\n# for satellite bias correction\n# Users may need to use their own satbias files for correct bias correction\ncp ${GSI_ROOT}/fix/comgsi_satbias_in ./satbias_in\ncp ${GSI_ROOT}/fix/comgsi_satbias_pc_in ./satbias_pc_in \n\n#\n##################################################################################\n# Set some parameters for use by the GSI executable and to build the namelist\necho \" Build the namelist \"\n\n# default is NAM\n#   as_op='1.0,1.0,0.5 ,0.7,0.7,0.5,1.0,1.0,'\nvs_op='1.0,'\nhzscl_op='0.373,0.746,1.50,'\nif [ ${bkcv_option} = GLOBAL ] ; then\n#   as_op='0.6,0.6,0.75,0.75,0.75,0.75,1.0,1.0'\n   vs_op='0.7,'\n   hzscl_op='1.7,0.8,0.5,'\nfi\nif [ ${bk_core} = NMMB ] ; then\n   vs_op='0.6,'\nfi\n\n# default is NMM\n   bk_core_arw='.false.'\n   bk_core_nmm='.true.'\n   bk_core_nmmb='.false.'\n   bk_if_netcdf='.true.'\nif [ ${bk_core} = ARW ] ; then\n   bk_core_arw='.true.'\n   bk_core_nmm='.false.'\n   bk_core_nmmb='.false.'\n   bk_if_netcdf='.true.'\nfi\nif [ ${bk_core} = NMMB ] ; then\n   bk_core_arw='.false.'\n   bk_core_nmm='.false.'\n   bk_core_nmmb='.true.'\n   bk_if_netcdf='.false.'\nfi\n\nif [ ${if_observer} = Yes ] ; then\n  nummiter=0\n  if_read_obs_save='.true.'\n  if_read_obs_skip='.false.'\nelse\n  nummiter=2\n  if_read_obs_save='.false.'\n  if_read_obs_skip='.false.'\nfi\n\n# Build the GSI namelist on-the-fly\n. $GSI_NAMELIST\n\n# modify the anavinfo vertical levels based on wrf_inout for WRF ARW and NMM\nif [ ${bk_core} = ARW ] || [ ${bk_core} = NMM ] ; then\nbklevels=`ncdump -h wrf_inout | grep \"bottom_top =\" | awk '{print $3}' `\nbklevels_stag=`ncdump -h wrf_inout | grep \"bottom_top_stag =\" | awk '{print $3}' `\nanavlevels=`cat anavinfo | grep ' sf ' | tail -1 | awk '{print $2}' `  # levels of sf, vp, u, v, t, etc\nanavlevels_stag=`cat anavinfo | grep ' prse ' | tail -1 | awk '{print $2}' `  # levels of prse\nsed -i 's/ '$anavlevels'/ '$bklevels'/g' anavinfo\nsed -i 's/ '$anavlevels_stag'/ '$bklevels_stag'/g' anavinfo\nfi\n\n#\n###################################################\n#  run  GSI\n###################################################\necho ' Run GSI with' ${bk_core} 'background'\n\ncase $ARCH in\n   'IBM_LSF')\n      ${RUN_COMMAND} ./gsi.x &lt; gsiparm.anl &gt; stdout 2&gt;&amp;1  ;;\n\n   * )\n      ${RUN_COMMAND} ./gsi.x &gt; stdout 2&gt;&amp;1  ;;\nesac\n\n##################################################################\n#  run time error check\n##################################################################\nerror=$?\n\nif [ ${error} -ne 0 ]; then\n  echo \"ERROR: ${GSI} crashed  Exit status=${error}\"\n  exit ${error}\nfi\n\n#\n##################################################################\n#\n#   GSI updating satbias_in\n#\n# GSI updating satbias_in (only for cycling assimilation)\n\n# Copy the output to more understandable names\nln -s stdout      stdout.anl.${ANAL_TIME}\nln -s wrf_inout   wrfanl.${ANAL_TIME}\nln -s fort.201    fit_p1.${ANAL_TIME}\nln -s fort.202    fit_w1.${ANAL_TIME}\nln -s fort.203    fit_t1.${ANAL_TIME}\nln -s fort.204    fit_q1.${ANAL_TIME}\nln -s fort.207    fit_rad1.${ANAL_TIME}\n\n# Loop over first and last outer loops to generate innovation\n# diagnostic files for indicated observation types (groups)\n#\n# NOTE:  Since we set miter=2 in GSI namelist SETUP, outer\n#        loop 03 will contain innovations with respect to\n#        the analysis.  Creation of o-a innovation files\n#        is triggered by write_diag(3)=.true.  The setting\n#        write_diag(1)=.true. turns on creation of o-g\n#        innovation files.\n#\n\nloops=\"01 03\"\nfor loop in $loops; do\n\ncase $loop in\n  01) string=ges;;\n  03) string=anl;;\n   *) string=$loop;;\nesac\n\n#  Collect diagnostic files for obs types (groups) below\n#   listall=\"conv amsua_metop-a mhs_metop-a hirs4_metop-a hirs2_n14 msu_n14 \\\n#          sndr_g08 sndr_g10 sndr_g12 sndr_g08_prep sndr_g10_prep sndr_g12_prep \\\n#          sndrd1_g08 sndrd2_g08 sndrd3_g08 sndrd4_g08 sndrd1_g10 sndrd2_g10 \\\n#          sndrd3_g10 sndrd4_g10 sndrd1_g12 sndrd2_g12 sndrd3_g12 sndrd4_g12 \\\n#          hirs3_n15 hirs3_n16 hirs3_n17 amsua_n15 amsua_n16 amsua_n17 \\\n#          amsub_n15 amsub_n16 amsub_n17 hsb_aqua airs_aqua amsua_aqua \\\n#          goes_img_g08 goes_img_g10 goes_img_g11 goes_img_g12 \\\n#          pcp_ssmi_dmsp pcp_tmi_trmm sbuv2_n16 sbuv2_n17 sbuv2_n18 \\\n#          omi_aura ssmi_f13 ssmi_f14 ssmi_f15 hirs4_n18 amsua_n18 mhs_n18 \\\n#          amsre_low_aqua amsre_mid_aqua amsre_hig_aqua ssmis_las_f16 \\\n#          ssmis_uas_f16 ssmis_img_f16 ssmis_env_f16 mhs_metop_b \\\n#          hirs4_metop_b hirs4_n19 amusa_n19 mhs_n19 goes_glm_16\"\n listall=`ls pe* | cut -f2 -d\".\" | awk '{print substr($0, 0, length($0)-3)}' | sort | uniq `\n\n   for type in $listall; do\n      count=`ls pe*${type}_${loop}* | wc -l`\n      if [[ $count -gt 0 ]]; then\n         cat pe*${type}_${loop}* &gt; diag_${type}_${string}.${ANAL_TIME}\n      fi\n   done\ndone\n\n#  Clean working directory to save only important files \nls -l * &gt; list_run_directory\nif [[ ${if_clean} = clean  &amp;&amp;  ${if_observer} != Yes ]]; then\n  echo ' Clean working directory after GSI run'\n  rm -f *Coeff.bin     # all CRTM coefficient files\n  rm -f pe0*           # diag files on each processor\n  rm -f obs_input.*    # observation middle files\n  rm -f siganl sigf0?  # background middle files\n  rm -f fsize_*        # delete temperal file for bufr size\nfi\n#\n#\n#################################################\n# start to calculate diag files for each member\n#################################################\n#\nif [ ${if_observer} = Yes ] ; then\n  string=ges\n  for type in $listall; do\n    count=0\n    if [[ -f diag_${type}_${string}.${ANAL_TIME} ]]; then\n       mv diag_${type}_${string}.${ANAL_TIME} diag_${type}_${string}.ensmean\n    fi\n  done\n  mv wrf_inout wrf_inout_ensmean\n\n# Build the GSI namelist on-the-fly for each member\n  nummiter=0\n  if_read_obs_save='.false.'\n  if_read_obs_skip='.true.'\n. $GSI_NAMELIST\n\n# Loop through each member\n  loop=\"01\"\n  ensmem=1\n  while [[ $ensmem -le $no_member ]];do\n\n     rm pe0*\n\n     print \"\\$ensmem is $ensmem\"\n     ensmemid=`printf %3.3i $ensmem`\n\n# get new background for each member\n     if [[ -f wrf_inout ]]; then\n       rm wrf_inout\n     fi\n\n     BK_FILE=${BK_FILE_mem}${ensmemid}\n     echo $BK_FILE\n     ln -s $BK_FILE wrf_inout\n\n#  run  GSI\n     echo ' Run GSI with' ${bk_core} 'for member ', ${ensmemid}\n\n     case $ARCH in\n        'IBM_LSF')\n           ${RUN_COMMAND} ./gsi.x &lt; gsiparm.anl &gt; stdout_mem${ensmemid} 2&gt;&amp;1  ;;\n\n        * )\n           ${RUN_COMMAND} ./gsi.x &gt; stdout_mem${ensmemid} 2&gt;&amp;1 ;;\n     esac\n\n#  run time error check and save run time file status\n     error=$?\n\n     if [ ${error} -ne 0 ]; then\n       echo \"ERROR: ${GSI} crashed for member ${ensmemid} Exit status=${error}\"\n       exit ${error}\n     fi\n\n     ls -l * &gt; list_run_directory_mem${ensmemid}\n\n# generate diag files\n\n     for type in $listall; do\n           count=`ls pe*${type}_${loop}* | wc -l`\n        if [[ $count -gt 0 ]]; then\n           cat pe*${type}_${loop}* &gt; diag_${type}_${string}.mem${ensmemid}\n        fi\n     done\n\n# next member\n     (( ensmem += 1 ))\n\n  done\n\nfi\n\nexit 0\n</code></pre>"},{"location":"WRF/run/#wrfexe","title":"wrf.exe","text":"<p>\u6a21\u5f0f\u8fd0\u884c\uff0c\u751f\u6210 wrfout \u6587\u4ef6</p> <pre><code># in: wrfinput_d0* wrfbody_d01...\nmpirun -np 4 ./wrf.exe\n# out: wrfout_d0*_YYYY-MM-DD_HH:MM::SS\n#      wrfrst_d0*_YYYY-MM-DD_HH:MM::SS\n#      ...\n</code></pre>"},{"location":"Windows/","title":"Windows","text":"\u5e94\u7528\u7a0b\u5e8f \u63cf\u8ff0 NETSTAT.EXE \u663e\u793a\u534f\u8bae\u7edf\u8ba1\u4fe1\u606f\u548c\u5f53\u524d TCP/IP \u7f51\u7edc\u8fde\u63a5\u3002 sc.exe \u670d\u52a1\u8bbe\u7f6e chcp.com \u663e\u793a\u6216\u8bbe\u7f6e\u6d3b\u52a8\u4ee3\u7801\u9875\u7f16\u53f7 findstr.exe \u5728\u6587\u4ef6\u4e2d\u5bfb\u627e\u5b57\u7b26\u4e32 <pre><code># \u67e5\u770b\u7f51\u7edc\u7aef\u53e3\nNETSTAT.EXE -ano\n</code></pre>"},{"location":"nginx/","title":"nginx","text":"<p>download</p> <pre><code># \u68c0\u67e5\u914d\u7f6e\u6587\u4ef6\nnginx -t\n# \u542f\u52a8\nstart nginx\n# \u505c\u6b62\nnginx -s stop\n# \u91cd\u542f\nnginx -s reload\n# \u5173\u95ed nginx \u670d\u52a1\nnginx -s quit\n</code></pre>"}]}